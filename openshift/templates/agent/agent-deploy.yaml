---
kind: Template
apiVersion: v1
metadata:
  name: ${NAME}${SUFFIX}
objects:
  # - kind: NetworkSecurityPolicy
  #   apiVersion: security.devops.gov.bc.ca/v1alpha1
  #   metadata:
  #     name: custom-${APP_NAME}-${NAME}${SUFFIX}-to-external-network
  #     labels:
  #       name: custom-${APP_NAME}-${NAME}${SUFFIX}-to-external-network
  #       app: ${APP_NAME}${SUFFIX}
  #       app-group: ${APP_GROUP}
  #       role: ${ROLE}
  #       env: ${TAG_NAME}
  #   spec:
  #     description: |
  #       Allow the agent to access the internet.
  #     source:
  #       - - role=${ROLE}
  #         - app=${APP_NAME}${SUFFIX}
  #         - env=${TAG_NAME}
  #         - $namespace=${NAMESPACE_NAME}-${TAG_NAME}
  #     destination:
  #       - - ext:network=any

  # - kind: NetworkSecurityPolicy
  #   apiVersion: security.devops.gov.bc.ca/v1alpha1
  #   metadata:
  #     name: custom-${APP_NAME}-${NAME}${SUFFIX}-policy
  #     labels:
  #       name: custom-${APP_NAME}-${NAME}${SUFFIX}-policy
  #       app: ${APP_NAME}${SUFFIX}
  #       app-group: ${APP_GROUP}
  #       role: ${ROLE}
  #       env: ${TAG_NAME}
  #   spec:
  #     description: |
  #       Allow the agent to talk to either the wallet or controller micro services.
  #     source:
  #       - - role=${ROLE}
  #         - app=${APP_NAME}${SUFFIX}
  #         - env=${TAG_NAME}
  #         - $namespace=${NAMESPACE_NAME}-${TAG_NAME}
  #     destination:
  #       - - role=wallet
  #         - app=${WALLET_APP_NAME}${WALLET_SUFFIX}
  #         - env=${TAG_NAME}
  #         - $namespace=${NAMESPACE_NAME}-${TAG_NAME}
  #       - - role=controller
  #         - app=${APP_NAME}${SUFFIX}
  #         - env=${TAG_NAME}
  #         - $namespace=${NAMESPACE_NAME}-${TAG_NAME}

  - kind: NetworkPolicy
    apiVersion: networking.k8s.io/v1
    metadata:
      name: ${NAME}${SUFFIX}-allow-ingress
      labels:
        name: ${NAME}${SUFFIX}-allow-ingress
        app: ${APP_NAME}${SUFFIX}
        app-group: ${APP_GROUP}
        role: ${ROLE}
        env: ${TAG_NAME}
    spec:
      description: |
        Allow traffic from routes into the ${ROLE} container(s).
      ingress:
        - from:
            - namespaceSelector:
                matchLabels:
                  network.openshift.io/policy-group: ingress
      podSelector:
        matchLabels:
          role: ${ROLE}
          app: ${APP_NAME}${SUFFIX}
          env: ${TAG_NAME}
      policyTypes:
        - Ingress

  - kind: NetworkPolicy
    apiVersion: networking.k8s.io/v1
    metadata:
      name: ${NAME}${SUFFIX}
      labels:
        name: ${NAME}${SUFFIX}
        app: ${APP_NAME}${SUFFIX}
        app-group: ${APP_GROUP}
        role: ${ROLE}
        env: ${TAG_NAME}
    spec:
      description: |
        Allow the API to access the agent admin interface.
      ingress:
        - from:
            - podSelector:
                matchLabels:
                  role: ${API_ROLE}
                  app: ${APP_NAME}${SUFFIX}
                  env: ${TAG_NAME}
              namespaceSelector:
                matchLabels:
                  name: ${NAMESPACE_NAME}
                  environment: ${TAG_NAME}
          ports:
            - protocol: TCP
              port: ${{AGENT_ADMIN_PORT}}
      podSelector:
        matchLabels:
          role: ${ROLE}
          app: ${APP_NAME}${SUFFIX}
          env: ${TAG_NAME}

  - kind: Service
    apiVersion: v1
    metadata:
      name: ${NAME}${SUFFIX}
      labels:
        name: ${NAME}${SUFFIX}
        app: ${APP_NAME}${SUFFIX}
        app.kubernetes.io/part-of: ${APP_NAME}${SUFFIX}
        app-group: ${APP_GROUP}
        role: ${ROLE}
        env: ${TAG_NAME}
    spec:
      ports:
        - name: ${NAME}-admin
          port: ${{AGENT_ADMIN_PORT}}
          protocol: TCP
          targetPort: ${{AGENT_ADMIN_PORT}}
        - name: ${NAME}-http
          port: ${{AGENT_HTTP_PORT}}
          protocol: TCP
          targetPort: ${{AGENT_HTTP_PORT}}
      selector:
        name: ${NAME}${SUFFIX}

  - kind: Route
    apiVersion: v1
    metadata:
      name: ${NAME}${SUFFIX}
      labels:
        name: ${NAME}${SUFFIX}
        app: ${APP_NAME}${SUFFIX}
        app.kubernetes.io/part-of: ${APP_NAME}${SUFFIX}
        app-group: ${APP_GROUP}
        role: ${ROLE}
        env: ${TAG_NAME}
      annotations:
        haproxy.router.openshift.io/timeout: ${ROUTE_TIMEOUT}
    spec:
      host: ${APPLICATION_DOMAIN}
      port:
        targetPort: ${NAME}-http
      tls:
        insecureEdgeTerminationPolicy: Redirect
        termination: edge
      to:
        kind: Service
        name: ${NAME}${SUFFIX}
        weight: 100

  - kind: Route
    apiVersion: v1
    metadata:
      name: ${NAME}-admin${SUFFIX}
      labels:
        name: ${NAME}${SUFFIX}
        app: ${APP_NAME}${SUFFIX}
        app.kubernetes.io/part-of: ${APP_NAME}${SUFFIX}
        app-group: ${APP_GROUP}
        role: ${ROLE}
        env: ${TAG_NAME}
      annotations:
        haproxy.router.openshift.io/timeout: ${ROUTE_TIMEOUT}
    spec:
      host: ${ADMIN_APPLICATION_DOMAIN}
      port:
        targetPort: ${NAME}-admin
      tls:
        insecureEdgeTerminationPolicy: Redirect
        termination: edge
      to:
        kind: Service
        name: ${NAME}${SUFFIX}
        weight: 100

  - kind: PersistentVolumeClaim
    apiVersion: v1
    metadata:
      name: ${NAME}${SUFFIX}-tails
      labels:
        name: ${NAME}${SUFFIX}
        app: ${APP_NAME}${SUFFIX}
        app.kubernetes.io/part-of: ${APP_NAME}${SUFFIX}
        app-group: ${APP_GROUP}
        role: ${ROLE}
        env: ${TAG_NAME}
    spec:
      storageClassName: "${TAILS_FILES_VOLUME_CLASS}"
      accessModes:
        - ReadWriteMany
      resources:
        requests:
          storage: "${TAILS_FILES_VOLUME_SIZE}"

  - kind: Secret
    apiVersion: v1
    metadata:
      name: ${WALLET_CREDENTIAL_STORE_NAME}${SUFFIX}
      labels:
        name: ${NAME}${SUFFIX}
        app: ${APP_NAME}${SUFFIX}
        app.kubernetes.io/part-of: ${APP_NAME}${SUFFIX}
        app-group: ${APP_GROUP}
        role: ${ROLE}
        env: ${TAG_NAME}
    stringData:
      key: ${WALLET_KEY}
      seed: ${WALLET_SEED}
      did: ${WALLET_DID}
    type: Opaque

  - kind: Secret
    apiVersion: v1
    metadata:
      name: ${NAME}${SUFFIX}
      labels:
        name: ${NAME}${SUFFIX}
        app: ${APP_NAME}${SUFFIX}
        app.kubernetes.io/part-of: ${APP_NAME}${SUFFIX}
        app-group: ${APP_GROUP}
        role: ${ROLE}
        env: ${TAG_NAME}
    stringData:
      admin-api-key: ${ADMIN_API_KEY}
    type: Opaque

  - kind: DeploymentConfig
    apiVersion: v1
    metadata:
      name: ${NAME}${SUFFIX}
      labels:
        name: ${NAME}${SUFFIX}
        app: ${APP_NAME}${SUFFIX}
        app.kubernetes.io/part-of: ${APP_NAME}${SUFFIX}
        app-group: ${APP_GROUP}
        role: ${ROLE}
        env: ${TAG_NAME}
      annotations:
        description: Defines how to deploy the application server
        app.openshift.io/connects-to: >-
          [{"apiVersion":"apps.openshift.io/v1","kind":"DeploymentConfig","name":"${WALLET_HOST}${WALLET_SUFFIX}"},
          {"apiVersion":"apps.openshift.io/v1","kind":"DeploymentConfig","name":"${API_HOST}${SUFFIX}"}]
    spec:
      replicas: 1
      selector:
        name: ${NAME}${SUFFIX}
      strategy:
        type: Rolling
      template:
        metadata:
          name: ${NAME}${SUFFIX}
          labels:
            name: ${NAME}${SUFFIX}
            app: ${APP_NAME}${SUFFIX}
            app.kubernetes.io/part-of: ${APP_NAME}${SUFFIX}
            app-group: ${APP_GROUP}
            role: ${ROLE}
            env: ${TAG_NAME}
        spec:
          volumes:
            - name: ${NAME}${SUFFIX}-tails
              persistentVolumeClaim:
                claimName: ${NAME}${SUFFIX}-tails
          containers:
            - name: ${NAME}${SUFFIX}
              command:
                # Note:
                #  - The wallet-name cannot contain '-'s.
                - bash
                - -c
                - $(echo aca-py start
                  --inbound-transport http '0.0.0.0' ${HTTP_INTERFACE_PORT}
                  --outbound-transport http
                  --auto-accept-requests
                  --auto-ping-connection
                  --auto-respond-messages
                  --auto-provision
                  --wallet-type 'indy'
                  --wallet-storage-config "$(eval echo \"${WALLET_STORAGE_CONFIGURATION}\")"
                  --wallet-storage-creds "$(eval echo \"${WALLET_STORAGE_CREDENTIALS}\")"
                  --admin '0.0.0.0' ${ADMIN_INTERFACE_PORT}
                  $([ ! -z "${AGENT_ADMIN_API_KEY}" ] && echo "--admin-api-key ${AGENT_ADMIN_API_KEY}" || echo "--admin-insecure-mode"));
              env:
                - name: ACAPY_GENESIS_URL
                  value: ${GENESIS_FILE_URL}
                - name: ACAPY_WALLET_NAME
                  value: ${NAME}${SUFFIX}-wallet
                - name: ACAPY_WALLET_STORAGE_TYPE
                  value: ${WALLET_STORAGE_TYPE}
                - name: POSTGRESQL_WALLET_HOST
                  value: ${WALLET_HOST}${WALLET_SUFFIX}
                - name: POSTGRESQL_WALLET_PORT
                  value: ${WALLET_HOST_PORT}
                - name: WALLET_STORAGE_CONFIGURATION
                  value: ${WALLET_STORAGE_CONFIG}
                - name: WALLET_STORAGE_CREDENTIALS
                  value: ${WALLET_STORAGE_CREDS}
                - name: POSTGRESQL_WALLET_USER
                  valueFrom:
                    secretKeyRef:
                      name: ${WALLET_HOST}${WALLET_SUFFIX}
                      key: database-user
                - name: POSTGRESQL_WALLET_PASSWORD
                  valueFrom:
                    secretKeyRef:
                      name: ${WALLET_HOST}${WALLET_SUFFIX}
                      key: database-password
                - name: POSTGRESQL_WALLET_ADMIN_PASSWORD
                  valueFrom:
                    secretKeyRef:
                      name: ${WALLET_HOST}${WALLET_SUFFIX}
                      key: admin-password
                - name: ACAPY_WALLET_KEY
                  valueFrom:
                    secretKeyRef:
                      name: ${WALLET_CREDENTIAL_STORE_NAME}${SUFFIX}
                      key: key
                - name: ACAPY_WALLET_SEED
                  valueFrom:
                    secretKeyRef:
                      name: ${WALLET_CREDENTIAL_STORE_NAME}${SUFFIX}
                      key: seed
                - name: WALLET_DID
                  valueFrom:
                    secretKeyRef:
                      name: ${WALLET_CREDENTIAL_STORE_NAME}${SUFFIX}
                      key: did
                - name: WEBHOOK_URL
                  value: ${WEBHOOK_URL}
                - name: HTTP_INTERFACE_PORT
                  value: ${AGENT_HTTP_PORT}
                - name: ADMIN_INTERFACE_PORT
                  value: ${AGENT_ADMIN_PORT}
                - name: AGENT_ADMIN_API_KEY
                  valueFrom:
                    secretKeyRef:
                      name: ${NAME}${SUFFIX}
                      key: admin-api-key
                - name: ACAPY_LABEL
                  value: ${AGENT_LABEL_NAME}
                - name: ACAPY_ENDPOINT
                  value: ${AGENT_BASE_URL}
                - name: ACAPY_READ_ONLY_LEDGER
                  value: ${AGENT_READ_ONLY_LEDGER}
                - name: ACAPY_LOG_LEVEL
                  value: ${LOG_LEVEL}
                - name: TAILS_FILES_DIR
                  value: ${TAILS_FILES_DIR}
                - name: ACAPY_TAILS_SERVER_BASE_URL
                  value: ${TAILS_SERVER_BASE_URL}
              image:
              ports:
                - containerPort: ${{AGENT_ADMIN_PORT}}
                  protocol: TCP
                - containerPort: ${{AGENT_HTTP_PORT}}
                  protocol: TCP
              volumeMounts:
                - name: ${NAME}${SUFFIX}-tails
                  mountPath: "${TAILS_FILES_DIR}"
              readinessProbe:
                timeoutSeconds: 30
                initialDelaySeconds: 3
                exec:
                  command:
                    - bash
                    - "-c"
                    - 'curl --fail "http://localhost:${ADMIN_INTERFACE_PORT}/status/ready" -H "X-API-KEY: ${AGENT_ADMIN_API_KEY}"'
              livenessProbe:
                timeoutSeconds: 30
                initialDelaySeconds: 300
                exec:
                  command:
                    - bash
                    - "-c"
                    - 'curl --fail "http://localhost:${ADMIN_INTERFACE_PORT}/status/live" -H "X-API-KEY: ${AGENT_ADMIN_API_KEY}"'

              imagePullPolicy: IfNotPresent
              resources:
                limits:
                  cpu: ${CPU_LIMIT}
                  memory: ${MEMORY_LIMIT}
                requests:
                  cpu: ${CPU_REQUEST}
                  memory: ${MEMORY_REQUEST}
              terminationMessagePath: /dev/termination-log
              terminationMessagePolicy: File
          dnsPolicy: ClusterFirst
          restartPolicy: Always
          schedulerName: default-scheduler
          securityContext: {}
          terminationGracePeriodSeconds: 30
      triggers:
        - type: ConfigChange
        - type: ImageChange
          imageChangeParams:
            automatic: true
            containerNames:
              - ${NAME}${SUFFIX}
            from:
              kind: ImageStreamTag
              name: ${SOURCE_IMAGE_NAME}:${TAG_NAME}
              namespace: ${IMAGE_NAMESPACE}

parameters:
  - name: NAME
    displayName: Name
    description: The name assigned to all the objects defined in this template.
    required: true
    value: issuer-kit-agent
  - name: APP_NAME
    displayName: App Name
    description: Used to group components together in the OpenShift console.
    required: true
    value: issuer
  - name: APP_GROUP
    displayName: App Group
    description: Used to group components together.
    required: true
    value: issuer-kit-agent
  - name: SUFFIX
    displayName: Suffix
    description: A suffix applied to all the objects in this template.
    required: false
    value:
  - name: ROLE
    displayName: Role
    description: The role of this service within the application - used for Network Policies.
    required: true
    value: agent
  - name: API_ROLE
    displayName: Agent Role
    description:
      The role of the api service within the application - used for Network
      Policies
    required: true
    value: api
  - name: APPLICATION_DOMAIN
    displayName: Application Hostname
    description: The exposed hostname that will route to the service, if left blank a value will be defaulted.
    required: false
    value: issuer-kit-agent.apps.silver.devops.gov.bc.ca
  - name: ADMIN_APPLICATION_DOMAIN
    displayName: Admin Application Hostname
    description: The exposed hostname that will route to the admin service endpoint, if left blank a value will be defaulted.
    required: false
  - name: ROUTE_TIMEOUT
    displayName: Route Timeout
    description: The timeout for the application route.  When this timeout is exceeded the application's route will respond with a 504 Gateway Timeout error.
    required: true
    value: 120s
  - name: IMAGE_NAMESPACE
    displayName: Namespace containing application images.
    required: true
    value: a99fd4-tools
  - name: NAMESPACE_NAME
    displayName: Namespace Name
    description: The name of the namespace being deployed to.
    required: true
    value: a99fd4
  - name: SOURCE_IMAGE_NAME
    displayName: Source Image Name
    description: The name of the source image to use for the service.
    required: true
    value: agent
  - name: TAG_NAME
    displayName: Environment TAG name
    description: The TAG name for this environment, e.g., dev, test, prod.
    required: true
    value: latest
  - name: AGENT_LABEL_NAME
    displayName: Agent Label/Name
    description: The label/name of the agent
    required: true
    value: issuer-kit-agent
  - name: AGENT_READ_ONLY_LEDGER
    displayName: Set read only ledger flag.
    description: Enable/Disable the read only ledger flag.  Controls the inclusion/exclusion of the agent '--read-only-ledger' startup parameter.  Defaults to disabled.
    required: true
    value: "false"
  - name: AGENT_BASE_URL
    displayName: Agent endpoint
    description: The endpoint of the agent
    required: true
    value: https://issuer-kit-agent.apps.silver.devops.gov.bc.ca
  - name: WEBHOOK_URL
    displayName: Webhook URL
    description: The webhook endpoint
    required: true
    value: http://api:8080/webhooks
  - name: AGENT_ADMIN_PORT
    displayName: Agent Admin Port
    description: The admin port on which the service will listen.
    required: true
    value: "8024"
  - name: ADMIN_API_KEY
    displayName: Agent Admin API Key
    description: The key used to authenticate client requests to the admin api.
    required: true
    generate: expression
    from: "[a-zA-Z0-9]{16}"
  - name: API_HOST
    displayName: API HOST
    description: The hostname of the api service.
    required: true
    value: api
  - name: AGENT_HTTP_PORT
    displayName: Agent Http Port
    description: The http port on which the service will listen.
    required: true
    value: "8021"
  - name: GENESIS_FILE_URL
    displayName: Genesis File URL
    description: The URL from which the genesis file can be downloaded.
    required: true
    value: https://raw.githubusercontent.com/sovrin-foundation/sovrin/stable/sovrin/pool_transactions_sandbox_genesis
  - name: LOG_LEVEL
    displayName: Log Level
    description: The logging level for the agent.
    required: true
    value: WARNING
  # ===============================================================================
  # Wallet Configuration
  #--------------------------------------------------------------------------------
  - name: WALLET_STORAGE_TYPE
    displayName: Wallet Storage Type
    description:
      The wallet storage type.  Your choice of 'postgres' or 'sqlite' at
      the moment.  If not defined, defaults to 'sqlite' for compatibility
    required: false
    value: postgres_storage
  - name: WALLET_HOST
    displayName: PostgreSql Wallet Hostname
    required: true
    description: Hostname of the deployed database hosting the wallet.  Only used when WALLET_STORAGE_TYPE = postgres_storage.
    value: issuer-kit-wallet
  - name: WALLET_APP_NAME
    displayName: Wallet Application Name
    required: true
    description: The name of the wallet shared application
    value: issuer-kit-shared
  - name: WALLET_SUFFIX
    displayName: Wallet Suffix Name
    required: false
    description: The value of the wallet shared application suffix
    value: ""
  - name: WALLET_HOST_PORT
    displayName: PostgreSql Wallet Port
    required: true
    description: The port number of the deployed database hosting the wallet.  Only used when WALLET_STORAGE_TYPE = postgres_storage.
    value: "5432"
  - name: WALLET_STORAGE_CONFIG
    displayName: Wallet Storage Configuration
    required: true
    description: Wallet storage configuration
    value: '{\"url\":\"${POSTGRESQL_WALLET_HOST}:${POSTGRESQL_WALLET_PORT}\",\"max_connections\":5}'
  - name: WALLET_STORAGE_CREDS
    displayName: Wallet Storage Credential Configuration
    required: true
    description: Wallet storage credential configuration
    value: '{\"account\":\"${POSTGRESQL_WALLET_USER}\",\"password\":\"${POSTGRESQL_WALLET_PASSWORD}\",\"admin_account\":\"postgres\",\"admin_password\":\"${POSTGRESQL_WALLET_ADMIN_PASSWORD}\"}'
  - name: WALLET_CREDENTIAL_STORE_NAME
    displayName: Wallet Credential Store Name
    description:
      The name of the wallet credential store (aka The name of the secret
      that contains the wallet credentials).
    required: true
    value: agent-wallet-credentials
  - name: WALLET_KEY
    displayName: Wallet Encryption Key
    description: The encryption key to be used for the wallets.  Needs to be base64 encoded.
    required: true
    generate: expression
    from: "[a-zA-Z0-9]{10}"
  - name: WALLET_SEED
    displayName: Indy Wallet Seed
    description: The Seed used for the indy wallet.  Needs to be base64 encoded.
    required: true
    generate: expression
    from: "[a-zA-Z0-9]{32}"
  - name: WALLET_DID
    displayName: Indy Wallet DID
    description: The DID associated to the indy wallet.  Needs to be base64 encoded.
    required: false
    generate: expression
    from: "[a-zA-Z0-9]{16}"
  # ===============================================================================
  # Tails Files Configuration
  #--------------------------------------------------------------------------------
  - name: TAILS_FILES_DIR
    displayName: Tails File Storage Dir
    description: The directory where the local copies of the tails files will be stored.
    required: true
    value: /home/indy/.indy_client/tails
  - name: TAILS_FILES_VOLUME_CLASS
    displayName: Tails File Storage Volume Class
    description: The class of the volume; gluster-file, gluster-block, gluster-file-db, netapp-file-standard, netapp-block-standard.
    required: true
    value: netapp-file-standard
  - name: TAILS_FILES_VOLUME_SIZE
    displayName: Tails File Storage Dir
    description: The size of the persistent volume , e.g. 512Mi, 1Gi, 2Gi.
    required: true
    value: 1Gi
  - name: TAILS_SERVER_BASE_URL
    displayName: Tails Server Base Url
    description: The base URL for the Tails Server.
    required: true
    value: https://tails-dev.vonx.io
  # ===============================================================================
  - name: CPU_REQUEST
    displayName: Resources CPU Request
    description: The resources CPU request (in cores) for this build.
    required: true
    value: 10m
  - name: CPU_LIMIT
    displayName: Resources CPU Limit
    description: The resources CPU limit (in cores) for this build.
    required: true
    value: 300m
  - name: MEMORY_REQUEST
    displayName: Resources Memory Request
    description: The resources Memory request (in Mi, Gi, etc) for this build.
    required: true
    value: 10Mi
  - name: MEMORY_LIMIT
    displayName: Resources Memory Limit
    description: The resources Memory limit (in Mi, Gi, etc) for this build.
    required: true
    value: 512Mi
